name: Analyze Gold & Generate Charts

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 13 * * *'  # Tous les jours Ã  13h
  workflow_dispatch:

jobs:
  generate-charts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pandas matplotlib snowflake-connector-python dbt-core dbt-snowflake faker

    - name: Generate CSV files
      run: |
        python generate_data.py

    - name: Setup dbt profiles
      run: |
        mkdir -p ~/.dbt
        echo "
        fakeschool_dbt:
          target: dev
          outputs:
            dev:
              type: snowflake
              account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
              user: ${{ secrets.SNOWFLAKE_USER }}
              password: ${{ secrets.SNOWFLAKE_PASSWORD }}
              role: ACCOUNTADMIN
              database: ${{ secrets.SNOWFLAKE_DATABASE }}
              warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
              schema: ${{ secrets.SNOWFLAKE_SCHEMA }}
              threads: 1
              client_session_keep_alive: False
        " > ~/.dbt/profiles.yml

    - name: Seed DBT data
      run: |
        cd fakeschool_dbt
        dbt seed --full-refresh --profiles-dir ~/.dbt

    - name: Compile and run dbt models
      run: |
        cd fakeschool_dbt
        dbt clean
        dbt compile --profiles-dir ~/.dbt
        dbt run --profiles-dir ~/.dbt  --full-refresh

    - name: Run gold queries & generate charts
      env:
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: python generate_gold_graphs.py

    - name: Zip charts
      run: zip -r gold_charts.zip charts/

    - name: Upload charts as artifact
      uses: actions/upload-artifact@v4
      with:
        name: gold-charts
        path: gold_charts.zip
        